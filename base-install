#!/bin/sh
function checkEfi() {
    ls /sys/firmware/efi/efivars 1>/dev/null 2>&1
    echo $?
}

# Check internet connection
function checkInternet() {
    ping google.com -c 1 1>/dev/null 2>&1

    if [[ $? -ne 0 ]]; then
        echo "Couldn't connect to network. Maybe try again in a spiff?"
        echo 1
    fi

    echo 0
}

# Create partitions
function formatEfi() {
    partNum=1
    echo "    Formatting $jab_drive"

    previousSwap=$(swapon -s | awk -F' ' '/\/dev/ {print $1}')

    if [[ -n $previousSwap ]]; then
        swapoff $previousSwap
    fi

    sfdisk --delete /dev/sda 1>/dev/null #2>&1
    # Create boot partition
    echo "    Creating boot partition"
    echo ',512M,U' | sfdisk $jab_drive -X gpt 1>/dev/null #2>&1
    mkfs.fat -F32 /dev/sda1 1>/dev/null #2>&1
    ((partNum=partNum+1))

    # Check and create swap partition
    if [[ $jab_swap -eq 0 ]]; then
        echo "Creating swap partition"
        echo ", $jab_swap_s, S" | sfdisk $jab_drive -a 1>/dev/null #2>&1
        ((partNum=partNum+1))
    fi

    # Check and create root partition
    if [[ $jab_home_part -eq 0 ]]; then
        "    Creating home partition"
        echo ",$jab_root_s,L" | sfdisk $jab_drive -a 1>/dev/null #2>&1
        mkfs.ext4 "/dev/sda$partNum" 1>/dev/null #2>&1
        ((partNum=partNum+1))
    fi

    echo "    Creating root partition"
    echo ",,L" | sfdisk $jab_drive -a 1>/dev/null #2>&1
    mkfs.ext4 "/dev/sda$partNum" 1>/dev/null #2>&1

    if [[ $jab_swap -eq 0 ]]; then
        mkswap "/dev/sda2" 1>/dev/null #2>&1
        swapon "/dev/sda2" 1>/dev/null #2>&1
    fi
}

function formatBios() {
    # TODO: Gather enough motivation to actually do this
    echo "BIOS implementation not completed yet"
}

function main() {
    #loadkeys fi
    #timedatectl set-ntp true
    
    conf_file=$(realpath $1)

    if [[ -f $conf_file ]]; then source $conf_file; fi
    
    [[ -z $jab_drive ]] && export jab_drive="/dev/sda"
    [[ -z $jab_swap ]] && export jab_swap=1
    [[ -z $jab_swap_s ]] && export jab_swap_s=4G
    [[ -z $jab_home_part ]] && export jab_home_part=1
    [[ -z $jab_root_s ]] && export jab_root_s=40G
    [[ -z $jab_efi ]] && export jab_efi=$(checkEfi)
    [[ -z $jab_online ]] && export jab_online=$(checkInternet)

    echo "Checking for internet connection..."
    if [[ ! jab_online ]]; then
        echo "No internet connection. Aborting."
        exit 1
    fi

    echo "Partitioning drive"
    if [[ jab_efi ]]; then
        formatEfi
    else
        formatBios
        exit 2
    fi

    pacman -Sy reflector --noconfirm

}

main $@
