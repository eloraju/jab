#!/bin/sh
### JAB - Juusos Arch Bootstrapper
### Order of operations
# 1. Enable multilib
# 1. Run pacman -S
# 2. Generate user 
# 3. Do some config stuff
# 4. Pull config files down
# 5. Install yay and yay packages
# 6. Pull wallpapers & scripts
# 7. Pull work stuff

USERNAME=$1
PROG=0
MAX=10

error() {
    clear; printf "\\n\\nError: %s\\n\\n" "$1"; exit;
}

# Something to look at while waiting for the whole thing to complete
incrementProgress() {
    PROG=$(expr $PROG + 1)
    echo -ne "$PROG/$MAX: $1\r"
}

# Enables multilib (for steam 'n stuff)
enablePacmanMultilib() {
    sed -i "/\[multilib\]/, /Include/"'s/^#//' /etc/pacman.conf
}

# Installs all the packages I need for work and leisure
installPacmanPackages() {
    pacman -S --noconfirm $(grep -vE '^#|^$' ./pacman-pkgs)
}

# Create a new user. This is the only param provided for the whole program ðŸ¤·
generateUser() {
    useradd -m -G wheel docker $1
    UHOME=/home/$1
}

# Generates ssh-keys for my work and personal repos
generateSSHKeys() {
    [ -d $UHOME/.ssh ] || mkdir $UHOME/.ssh
    cp ./templates/ssh.config $UHOME/.ssh/config
    ssh-keygen -P '' -f $UHOME/.ssh/bb >> /dev/null
    ssh-keygen -P '' -f $UHOME/.ssh/gl >> /dev/null
}

# Throw in the keyboard config
copyKeyboardConfig() {
    cp templates/00-keyboard.conf /etc/X11/xorg.conf.d/00-keyboard.conf
}

# Enable and start all kinds of services
enableServices() {
    systemctl enable --now docker systemd-networkd systemd-resolved lightdm
}

# Pull stuff

# Install yay and yay packages
installYayAndPackages() {
    cd /tmp
    git clone https://aur.archlinux.org/yay.git
    cd yay
    sudo -u $1 makepkg -si
    # Check that yay is working
    # '(yay -Q >> /dev/null && yay -S $(grep -vE '^#|^$'./yay-pkgs)) || error yay didn't install correctly'
}




